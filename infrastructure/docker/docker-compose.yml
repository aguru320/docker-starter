version: '3'

volumes:
    postgres-data: {}

services:
    router:
        build: services/router
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
        # # Use network alias if you need to access a container via a specific
        # # host by using the routing from another container
        # networks:
        #     default:
        #         aliases:
        #             - api.app.test

    frontend:
        build: services/frontend
        depends_on:
            - postgres
        volumes:
            - "../../${PROJECT_DIRECTORY}:/home/app/app:cached"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.frontend.rule=Host(${PROJECT_HOSTNAMES})"
            - "traefik.http.routers.frontend.tls=true"
            - "traefik.http.routers.frontend-unsecure.rule=Host(${PROJECT_HOSTNAMES})"
            # Comment the next line to be able to access frontend via HTTP instead of HTTPS
            - "traefik.http.routers.frontend-unsecure.middlewares=redirect-to-https@file"

    postgres:
        build: services/postgres
        environment:
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=app
        volumes:
            - postgres-data:/var/lib/postgresql/data

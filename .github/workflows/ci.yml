name: Continuous Integration

'on':
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]
    schedule:
        - cron: '0 0 * * MON'

permissions:
    contents: read

jobs:
    check-cs:
        name: Check Coding Standards
        runs-on: ubuntu-latest
        steps:
        -   name: Checkout
            uses: actions/checkout@v3

        -   name: PHP-CS-Fixer
            uses: docker://oskarstark/php-cs-fixer-ga
            with:
                args: --config=.php-cs-fixer.php --diff --dry-run

    ci:
        name: Test with PHP ${{ matrix.php-version }}
        strategy:
            fail-fast: false
            matrix:
                php-version: ['7.4', '8.0', '8.1', '8.2']
        runs-on: ubuntu-latest
        env:
            DS_PHP_VERSION: ${{ matrix.php-version }}
            BUILDKIT_PROGRESS: plain
            CI: 1
        steps:
            -
                uses: actions/checkout@v3

            # Setup

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: 8.2
                    tools: jolicode/castor

            # -
            #     name: 'Download castor'
            #     run: 'wget https://github.com/jolicode/castor/releases/latest/download/castor.linux-amd64.phar && chmod +x castor.linux-amd64.phar && sudo mv castor.linux-amd64.phar /usr/local/bin/castor'

            -
                name: 'Build and start the infrastructure'
                run: 'castor start && sleep 5'

            -
                name: 'Test the infrastructure is working'
                run: |
                    set -e
                    set -o pipefail
                    curl --fail --insecure --silent -H "Host: app.test" https://127.0.0.1 | grep "Hello world"
                    curl --fail --insecure --silent -H "Host: app.test" https://127.0.0.1 | grep "${{ matrix.php-version }}"

            -
                name: 'Test communication with DB'
                run: |
                    set -e
                    set -o pipefail

                    cat > application/public/index.php <<'EOPHP'
                    <?php
                    $pdo = new PDO('pgsql:host=postgres;dbname=app', 'app', 'app');
                    $pdo->exec('CREATE TABLE test (id integer NOT NULL)');
                    $pdo->exec('INSERT INTO test VALUES (1)');
                    echo $pdo->query('SELECT * from test')->fetchAll() ? 'database OK' : 'database KO';
                    EOPHP

                    # FPM seems super slow to detect the change, we need to wait a bit
                    sleep 3

                    curl --fail --insecure --silent -H "Host: app.test" https://127.0.0.1 | grep "database OK"
